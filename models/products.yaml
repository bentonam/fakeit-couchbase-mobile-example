name: Products
type: object
key: _id
data:
  min: 500
  max: 1000
  inputs:
    - ./categories.csv
  pre_build: globals.current_category = faker.random.arrayElement(inputs.categories);
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: `product_${this.product_id}`
  channels:
    type: array
    data:
      build: |
        return [ `channel-products` ];
  doc_type:
    type: string
    description: The document type
    data:
      value: product
  product_id:
    type: string
    description: Unique identifier representing a specific product
    data:
      build: faker.random.uuid()
  price:
    type: double
    description: The product price
    data:
      build: chance.floating({ min: 0, max: 150, fixed: 2 })
  sale_price:
    type: double
    description: The product price
    data:
      post_build: |
        let sale_price = 0;
        if (chance.bool({ likelihood: 30 })) {
          sale_price = chance.floating({ min: 0, max: this.price * chance.floating({ min: 0, max: 0.99, fixed: 2 }), fixed: 2 });
        }
        return sale_price;
  display_name:
    type: string
    description: Display name of product.
    data:
      build: faker.commerce.productName()
  short_description:
    type: string
    description: Description of product.
    data:
      build: faker.lorem.paragraphs(1)
  long_description:
    type: string
    description: Description of product.
    data:
      build: faker.lorem.paragraphs(5)
  keywords:
    type: array
    description: An array of keywords
    items:
      type: string
      data:
        min: 0
        max: 10
        build: faker.random.word()
  availability:
    type: string
    description: The availability status of the product
    data:
      build: |
        let availability = 'In-Stock';
        if (chance.bool({ likelihood: 40 })) {
          availability = faker.random.arrayElement([ 'Preorder', 'Out of Stock', 'Discontinued' ]);
        }
        return availability;
  availability_date:
    type: integer
    description: An epoch time of when the product is available
    data:
      build: faker.date.recent()
      post_build: new Date(this.availability_date).getTime()
  product_slug:
    type: string
    description: The URL friendly version of the product name
    data:
      post_build: faker.helpers.slugify(this.display_name).toLowerCase()
  category_id:
    type: integer
    description: The Category ID for the Product
    data:
      build: globals.current_category.category_id
  category:
    type: string
    description: Category for the Product
    data:
      build: globals.current_category.category_name
  category_slug:
    type: string
    description: The URL friendly version of the category name
    data:
      post_build: globals.current_category.category_slug
  image:
    type: string
    description: Image URL representing the product.
    data:
      build: faker.image.image()
  alternate_images:
    type: array
    description: An array of alternate images for the product
    items:
      type: string
      data:
        min: 0
        max: 4
        build: faker.image.image()
